// Code generated by MockGen. DO NOT EDIT.
// Source: spnego.go

// Package httpauth is a generated GoMock package.
package httpauth

import (
	log "log"
	url "net/url"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSpnegoProvider is a mock of SpnegoProvider interface.
type MockSpnegoProvider struct {
	ctrl     *gomock.Controller
	recorder *MockSpnegoProviderMockRecorder
}

// MockSpnegoProviderMockRecorder is the mock recorder for MockSpnegoProvider.
type MockSpnegoProviderMockRecorder struct {
	mock *MockSpnegoProvider
}

// NewMockSpnegoProvider creates a new mock instance.
func NewMockSpnegoProvider(ctrl *gomock.Controller) *MockSpnegoProvider {
	mock := &MockSpnegoProvider{ctrl: ctrl}
	mock.recorder = &MockSpnegoProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSpnegoProvider) EXPECT() *MockSpnegoProviderMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockSpnegoProvider) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockSpnegoProviderMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockSpnegoProvider)(nil).Close))
}

// GetToken mocks base method.
func (m *MockSpnegoProvider) GetToken(url *url.URL, responseToken string) (string, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToken", url, responseToken)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetToken indicates an expected call of GetToken.
func (mr *MockSpnegoProviderMockRecorder) GetToken(url, responseToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*MockSpnegoProvider)(nil).GetToken), url, responseToken)
}

// SetLogger mocks base method.
func (m *MockSpnegoProvider) SetLogger(logger *log.Logger) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetLogger", logger)
}

// SetLogger indicates an expected call of SetLogger.
func (mr *MockSpnegoProviderMockRecorder) SetLogger(logger interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetLogger", reflect.TypeOf((*MockSpnegoProvider)(nil).SetLogger), logger)
}
